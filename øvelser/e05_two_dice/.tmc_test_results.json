[{"name": "test.test_two_dice.TwoDice.test_content", "status": "failed", "message": "2 != 5", "passed": false, "points": ["p01-05.1"], "backtrace": ["  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Users\\soren\\OneDrive - TEC\\Data HF\\foolaround\\PythonData_23013xp\\øvelser\\e05_two_dice\\test\\test_two_dice.py\", line 33, in test_content\n    self.assertEqual(a+b, 5)\n"]}, {"name": "test.test_two_dice.TwoDice.test_lines", "status": "failed", "message": "36 != 4 : The output should contain exactly four lines!", "passed": false, "points": ["p01-05.1"], "backtrace": ["  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Program Files\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Users\\soren\\OneDrive - TEC\\Data HF\\foolaround\\PythonData_23013xp\\øvelser\\e05_two_dice\\test\\test_two_dice.py\", line 21, in test_lines\n    self.assertEqual(len(result), 4, msg=\"The output should contain exactly four lines!\")\n"]}]